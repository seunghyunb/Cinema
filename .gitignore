# iml은 Intelli J IDEA Module 의 약자로 Intelli J 의 모듈 구성에 대해 xml 형태로 기술해 놓은 파일
# 다른 OS 와 다른 IDE 환경 등을 사용한다면 계속 변하기에 *.iml 로 gitignore 처리하는게 좋다.
*.iml

# 빌드 구성 폴더, 빌드 캐시 정보 일부를 저장해놓은 곳.
.gradle

# 내 로컬 기준의 SDK 경로가 들어있다.
/local.properties

#.idea 폴더에는 Intelli J IDE 를 사용하면 프로젝트의 모든 프로젝트 별 설정이 .idea 폴더 아래 저장된다.
# 프로젝트 설정은 각 특정 프로젝트와 함께 .idea 폴더 아래에 xml 파일 세트로 저장된다.
# 기본 프로젝트 설정을 지저하면 새로 만든 각 프로젝트에 이 설정이 자동으로 사용된다.
/.idea/caches

# 다운로드 받은 라이브러리의 jar파일이 저장된 위치가 들어있다.
# 사용자별로 다르므로 반드시 ignore 추가
/.idea/libraries

# iml 파일의 경로가 들어있는데 사용자별로 다를 수 있다.
/.idea/modules.xml

# 열어본 파일의 커서의 마지막 위치 같은 AndroidStudio의 작업 영역에 대한 정보가 포함되어 있음. 사용자마다 다를 수 있다.
/.idea/workspace.xml

# 아키텍처컴포넌트의 네비게이션에 관련된 파일.
# element의 위치를 네비게이션 에디터에 저장한다.
# 네비게이션을 사용한다면 보관해야 한다.
/.idea/navEditor.xml

# 예를 들어 Vector Asset 에서 icon을 추가했으면 '마지막으로 추가한 아이콘의 정보'를 저장한다.
/.idea/assetWizardSettings.xml

# DS_STORE 파일이란 Desktop Services Store의 약자로 애플에서 정의한 파일 포맷이다.
# 애플의 맥 OS 시스템이 finder로 폴더에 접근할 때 자동으로 생기는 파일로 해당 폴더에 대한 메타데이터를 저장하는 파일이다.
# 분석해보면 해당 디렉토리 크기, 아이콘의 위치, 폴더의 배경에 대한 정보들을 얻을 수 있다
# DS_store 파일은 프로젝트와 관련없는 파일이며, git status를 사용했을 때 발견되는 파일이다.
# Mac OS를 사용하다보면 .DS_Store가 자동으로 생성되어 계속 github repository에 업로드되는데, 이것은 수시로 수정될 수 있어 conflict를 발생시킬 수 있다.
.DS_Store
/build
/captures
.externalNativeBuild
.cxx
# 로컬 기준의 SDK 경로가 들어있는 파일
local.properties
